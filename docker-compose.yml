services:
  frontend:
    build: ./frontend
    container_name: edumint-frontend
    ports: ["3000:3000"]
    depends_on: [api-gateway]
    networks: [edumint-net]
    restart: unless-stopped

  admin-dashboard:
    build: ./admin-dashboard
    container_name: edumint-admin-dashboard
    ports: ["3001:3000"]
    depends_on: [api-gateway]
    networks: [edumint-net]
    restart: unless-stopped

  api-gateway:
    build: ./api-gateway
    container_name: edumint-api-gateway
    ports: ["8080:8080"]
    env_file: ./.env
    depends_on:
      db: { condition: service_healthy }
      rabbitmq: { condition: service_healthy }
    networks: [edumint-net]
    restart: unless-stopped

  problem-generator-worker:
    build: ./problem-generator-worker
    deploy:
      replicas: 2
    env_file: ./.env
    depends_on:
      db: { condition: service_healthy }
      rabbitmq: { condition: service_healthy }
    networks: [edumint-net]
    restart: unless-stopped

  db:
    image: postgres:16-alpine # <-- ここを修正
    container_name: edumint-db
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports: ["5432:5432"]
    networks: [edumint-net]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3.13-management-alpine # こちらは変更なし
    container_name: edumint-rabbitmq
    ports: ["5672:5672", "15672:15672"]
    networks: [edumint-net]
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres-data:

networks:
  edumint-net:
    driver: bridge